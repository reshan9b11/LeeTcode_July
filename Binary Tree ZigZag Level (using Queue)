/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        if(root==nullptr){
            return {};
        }
        vector<vector<int>> r;
        int c=0;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            vector<int> temp;
            
            int n=q.size();
            for(int i=0;i<n;i++){
                
               TreeNode* temp_front = q.front(); 
                  q.pop() ;
            
                 if(temp_front->left!=nullptr)
                {
                  q.push(temp_front->left);
                 }
                if(temp_front->right!=nullptr){
            
                  q.push(temp_front->right);
                  }    
                   temp.push_back(temp_front->val);
            }
            
            if(c%2!=0) 
            {  
                reverse(temp.begin() , temp.end()) ;
            }
        r.push_back(temp);
          c++;
            
        }
        return r;
        
    }
};
