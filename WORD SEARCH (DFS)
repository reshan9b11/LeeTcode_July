class Solution {
public:
    bool dfs(vector<vector<char>>& board, string word, int i, int j, int k){
    int row = board.size();
    int col = board[0].size();
 
    if(i<0 || j<0 || i>=row || j>=col){
        return false;
    }
 
    if(board[i][j] == word.at(k)){
        char temp = board[i][j];
        board[i][j]='#';
        if(k==word.length()-1){
            return true;
        }else if(dfs(board, word, i-1, j, k+1)
        ||dfs(board, word, i+1, j, k+1)
        ||dfs(board, word, i, j-1, k+1)
        ||dfs(board, word, i, j+1, k+1)){
            return true;
        }
        board[i][j]=temp;
    }
 
    return false;
}

    
    bool exist(vector<vector<char>>& board, string word) {
        
        
    int row = board.size();
    int col = board[0].size();
 
    int result = 0;
    for(int i=0; i<row; i++){
        for(int j=0; j<col; j++){
           if(dfs(board,word,i,j,0)){
               result = 1;
               if(result==1){
                   return true;
               }
           }
        }
    }
        return false;
    }
 
    
};
