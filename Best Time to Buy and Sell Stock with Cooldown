
/////////////////////////tutorialpoint.com/////////////////////////
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n=prices.size();
        if(n==1){
            return 0;
        }
        int endWithSell = 0;
      int endWithBuy = INT_MIN;
      int prevBuy =0, prevSell = 0;
      for(int i =0;i<prices.size();i++){
         prevBuy = endWithBuy;
         endWithBuy = max(endWithBuy,prevSell - prices[i]);
         prevSell = endWithSell;
         endWithSell = max(endWithSell, prevBuy + prices[i]);
      }
      return endWithSell;
    }
};

/////////////////////////////////////////////////////////////////////////////////////////
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        
        int buy = INT_MIN, sell = 0, coldown = 0, noOp = INT_MIN;
        
        for(auto p : prices)
        {
            noOp = max(noOp, buy);
            buy = coldown - p;
            coldown = max(coldown, sell);
            sell = noOp + p;
        }
        
        return max(coldown, sell);
    }
};
